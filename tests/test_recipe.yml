_include:
  - (pfb)stimela_cabs.yaml

opts:
  log:
    dir: logs
    nest: 2

test_recipe:
  name: "PFB sample recipe"
  info: "just a demo recipe"

  inputs:
    ms:
      dtype: MS
      required: true
      abbreviation: ms
    data_column:
      dtype: str
      default: DATA
      abbreviation: dc
    weight_column:
      dtype: str
      default: WEIGHT_SPECTRUM
      abbreviation: wc
    flag_column:
      dtype: str
      default: FLAG
      abbreviation: fc
    field_of_view:
      dtype: float
      abbreviation: fov
      required: true
      info: 'Field of view in degrees'
      metavar: DEG
    super_resolution_factor:
      dtype: float
      abbreviation: srf
      default: 2.0
      info: 'Will over-sample Nyquist by this factor at max frequency'
    sigmainv:
      dtype: float
      abbreviation: sinv
      default: 1e-5
      info: 'Variance of assume GRF'
    sigma21:
      dtype: float
      info: 'Wavelet thresholding level'
      default: 1e-4
    pd_maxit:
      dtype: int
      info: Max primal dual iterations
      default: 50
    niter:
      dtype: int
      info: "Max backward steps per pfb iteration"
      default: 1

  # an alias is a recipe parameter that maps to parameters of step(s)
  aliases:
    output_filename: [grid.output_filename, forward.output_filename, backward.output_filename]
    nband: [grid.nband, forward.nband, backward.nband]
    nthreads: [grid.nthreads, forward.nthreads, backward.nthreads]
    product: [grid.product, forward.product, backward.product]

  steps:
    grid:
      cab: pfb.grid
      params:
        # an alternate way to achieve aliasing is via {}-substitutions
        # this is more flexible, but doesn't do proper type checking up front
        data_column: '{recipe.data_column}'
        weight_column: '{recipe.weight_column}'
        flag_column: '{recipe.flag_column}'
        ms: '{recipe.ms}'
        field_of_view: '{recipe.field_of_view}'
        super_resolution_factor: '{recipe.super_resolution_factor}'

    forward:
      cab: pfb.forward
      params:
        sigmainv: '{recipe.sigmainv}'

    backward:
      cab: pfb.backward
      params:
        niter: '{recipe.niter}'
        pd_maxit: '{recipe.pd_maxit}'
        sigmainv: '{recipe.sigmainv}'
        sigma21: '{recipe.sigma21}'

